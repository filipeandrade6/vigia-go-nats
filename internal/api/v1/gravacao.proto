syntax = "proto3";

option go_package = "./internal/api/v1";

package gravacao;

service Gravacao {
    rpc Registrar (RegistrarReq) returns (RegistrarRes) {}
    rpc RemoverRegistro (RemoverRegistroReq) returns (RemoverRegistroRes) {}

    rpc StartProcessos (StartProcessosReq) returns (StartProcessosRes) {}
    rpc StopProcessos (StopProcessosReq) returns (StopProcessosRes) {}
    rpc ListProcessos (ListProcessosReq) returns (ListProcessosRes) {}

    rpc UpdateVeiculos (UpdateVeiculosReq) returns (UpdateVeiculosRes) {}

    rpc UpdateArmazenamento (UpdateArmazenamentoReq) returns (UpdateArmazenamentoRes) {}
}

message RegistrarReq {
    string servidor_gravacao_id = 1;
    string armazenamento = 2;
    int32 horas_retencao = 3;
    string endereco_ip = 4;
    int32 porta = 5;
    string db_host = 6;
    string db_user = 7;
    string db_password = 8;
    string db_name = 9;
    int32 db_max_idle_conns = 10;
    int32 db_max_open_conns = 11;
    bool db_disable_tls = 12;
}

message RegistrarRes {}

// ===================

message RemoverRegistroReq {}

message RemoverRegistroRes {}

// ===================

message StartProcessosReq {
    repeated string processos = 1;
}

message StartProcessosRes {
    repeated string non_started_processos = 1;
}

message StopProcessosReq {
    repeated string processos = 1;
}

message StopProcessosRes {
    repeated string non_stopped_processos = 1;
}

message ListProcessosReq {}

message ListProcessosRes {
    repeated string processos_em_execucao = 1;
    repeated string processos_em_tentativa = 2;
}

// ===================

message UpdateVeiculosReq {}

message UpdateVeiculosRes {}

// ===================

message UpdateArmazenamentoReq {
    string armazenamento = 1;
    int32 horas_retencao = 2;
}

message UpdateArmazenamentoRes {}